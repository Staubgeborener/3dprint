[save_variables]
filename: ~/printer_data/config/saved_variables.cfg

#Test after restart
[include mainsail.cfg]
[include timelapse.cfg]
[include pa_cal.cfg]
[include GET_PROBE_LIMITS.cfg]

# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.
 
# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC
 
# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.
 
# See docs/Config_Reference.md for a description of parameters.

[display_status]

#[input_shaper]
#shaper_freq_x: 42.8  # frequency for the X mark of the test model
#shaper_freq_y: 49.1  # frequency for the Y mark of the test model

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -1
position_min: -1
position_max: 202
homing_speed: 75
 
[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -12
position_min: -12
position_max: 206
homing_speed: 75
 
[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 215
position_min: -10

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 0,0
mesh_max: 157,197
probe_count: 3,3
algorithm: bicubic
bicubic_tension: .2
fade_start: 1
fade_end: 10
fade_target: 0
 
[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 33.362
pressure_advance: 0.04
#pressure_advance: 0.4
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Generic 3950
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300

[verify_heater extruder]
max_error: 120 
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 35
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130
 
[fan]
pin: PA0
 
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
 
#[mcu rpi]
#serial: /tmp/klipper_host_mcu
 
#[adxl345]
#cs_pin: rpi:None
 
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    100,100,20  # an example
 
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100
 
[respond]
default_type: command
[pause_resume] recover_velocity: 50
 
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -44
y_offset: -8
#z_offset: 1
speed: 10.0
samples_tolerance_retries: 3
#samples: 3
#   The number of times to probe each point. The probed z-values will
#   be averaged. The default is to probe 1 time.
samples_result: median
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
pin_up_touch_mode_reports_triggered: False

# MACROS

[gcode_macro HOMING]
#   only home if needed
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

[gcode_macro PID]
gcode:
    # home all axis and go up
    G28
    G91
    G1 Z+50 F1500
    # heat up bed and cool down extruder
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    # fan at 100%
    M106 S255
    # wait 3 minutes
    M117 Wait 3 minutes
    G4 P180000
    # calibrate extruder pid
    PID_CALIBRATE HEATER=extruder TARGET=215
    SAVE_CONFIG

[gcode_macro CALIBRATE_PROBE]
gcode:
    HOMING
    BED_MESH_CLEAR
    PROBE_CALIBRATE

[gcode_macro HOME_ALL_AXES]
gcode:
    G28

[gcode_macro CALIBRATE_BED_MESH]
gcode:
    HOMING
    BED_MESH_CALIBRATE
    SAVE_CONFIG

[gcode_macro SPRING_BED_CALIBRATION]
gcode:
    HOMING
    SCREWS_TILT_CALCULATE

[gcode_macro extrude_a_bit]
gcode:
    G91
    g1 e50 f50

[gcode_macro clog]
gcode:
    G91
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000

[gcode_shell_command printer_osram_off]
command: bash /home/pi/klipper_config/shutdown_script.sh
timeout: 90.0
verbose: True

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/3dprint/backup_script.sh
timeout: 90.0
verbose: True

[safe_z_home]
home_xy_position: 117,117 # Change coordinates to the center of your print bed
z_hop: 10                 # Move up 10mm z_hop_speed: 5

[screws_tilt_adjust]
screw1: 44, 0
screw1_name: front left screw
screw2: 201, 0
screw2_name: front right screw
screw3: 201, 199
screw3_name: rear right screw
screw4: 44, 199
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 200.
screw_thread: CW-M3

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(100)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    # Wait for Temperatures then home
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}
    G28
    # Use the bed mesh 
    BED_MESH_PROFILE LOAD=default
    # Move the nozzle near the bed
    G1 X15 Y20 Z5 F6000
    # Set and wait for nozzle to reach temperature
    PRIME_LINE
    M117 Printing...

[gcode_macro THE_END]
gcode:
    TIMELAPSE_RENDER
    TURN_OFF_HEATERS    ;turn off heaters... 
    SAVE_GCODE_STATE NAME=END_state
    M83                 ;set relative extrusion
    G92 E0              ;reset extrusion amount
    M204 S10000         ;set max acceleration
    G1 E-2 F4000        ;retract 2mm
    M204 S3000          ;set max acceleration

    ;move the toolhead out of the way
    ;if the tool is less than 30mm away from Z Max, move it to Z max, otherwise, move Z up 30mm
    
    ;Obtain the Z axis limit from the [stepper_z] section of the config file and make
    ;  a decision where to move the Z axis based on the current toolhead 
    {% if printer.toolhead.position.z|float + 30 >= printer.configfile.config["stepper_z"]["position_max"]|float %}
    G90                  ;set absolute extrusion
    G1 Z{printer.configfile.config["stepper_z"]["position_max"]|float} F1000 ;Move tool
    {% else %}

    G91                  ;set relative extrusion
    G1 Z30 F1000         ;move Z axis up 30mm
    {% endif %}

    RESTORE_GCODE_STATE NAME=END_state
    G1 X0 Y200 F24000    ;park tool at back of printer
    M107                
    #UNLOAD_FILAMENT     ;this is a good spot to call an unload 
                         ;filament macro, if you are into that sort of thing
    SET_GCODE_OFFSET Z=0 ;reset whatever babystepping you have done
    M84                  ;disable motors
    CLEAR_PAUSE          ;clear whatever PAUSE state you may have if you have it

    RESPOND PREFIX=tgnotify MSG="Finished printing"
    RUN_SHELL_COMMAND CMD=printer_osram_off ;shutdown printer

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ; Reset Extruder
    G1 Z3.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X3.1 Y30 Z0.3 F5000.0 ; Move to start position
    G1 X3.1 Y150.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X2.5 Y150.0 Z0.3 F5000.0 ; Move to side a little
    G1 X2.5 Y30 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z3.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G4 P5000 ; wait 5 sec to depressurize
    G1 Y0 Z0.6 ; move back down optional.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.130000, -0.142500, -0.127500
#*# 	  -0.100000, -0.100000, -0.142500
#*# 	  -0.135000, -0.170000, -0.210000
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 3
#*# max_y = 197.0
#*# mesh_x_pps = 2
#*# max_x = 157.0
#*#
#*# [bltouch]
#*# z_offset = 1.300
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.375
#*# pid_ki = 1.518
#*# pid_kd = 142.103
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.169
#*# pid_ki = 1.242
#*# pid_kd = 1019.491
