# superslicer start gcode:
#
# M117
# THE_START EXTRUDER={first_layer_temperature[initial_extruder] + extruder_temperature_offset[initial_extruder]} BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature] PRINT_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} PRINT_MAX={first_layer_print_max[0]},{first_layer_print_max[1]}
#
# Enable "Label objects" in superslicer for KAMP
[gcode_macro THE_START]
gcode:
    {% set BED = params.BED|default(65)|float %}
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(210)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    {% set MATERIAL = params.MATERIAL|default("PLA")|string %}

    RESPOND MSG="Set extruder to 150.0"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED}    ; set bed temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150        ; set nozzle temp for probing -- needs to be hot enough to squish any filament on the nozzle
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM=150             

    G21          ; set to mm
    M220 S100	 ; set print speed to 100%
    M221 S100	 ; set flow rate to 100%
    M107         ; disable fans
    G90          ; absolute positioning
    G28          ; homing

    {% if BED_TEMP < BED %}
      RESPOND MSG="Wait for bed temp {BED}"
    {% else %}
      RESPOND MSG="Bed already heated to {BED}"
    {% endif %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED}    ; wait for bed temp         

    RESPOND MSG="Begin bed mesh calibration"
    #mesh_tune
    SETUP_KAMP_MESHING
    SETUP_LINE_PURGE ADAPTIVE_ENABLE=1
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE

    RESPOND MSG="Bed mesh calibration finished"
    RESPOND MSG="Heating up the extruder to {EXTRUDER}"
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER} ; wait for extruder temp

    RESPOND MSG="Prime Line"
    LINE_PURGE

[gcode_macro THE_END]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y200
    # Disable steppers
    M84
    {% if printer.save_variables.variables.autoonoroff == 1 %}
      RESPOND TYPE=error MSG="Running auto shutdown..."
    {% endif %}
    RESPOND PREFIX=tgnotify MSG="Finished printing"
    RUN_SHELL_COMMAND CMD=printer_osram_off ;shutdown printer

[gcode_macro HOMING]
# only home if needed
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}

[gcode_macro PID]
gcode:
    {% set BED_TEMP = printer.heater_bed.temperature %} ; get current bed temp
    {% set EXTRUDER_TEMP = printer.extruder.temperature %} ; get current hotend temp
    # home all axis and go up
    G28
    G91
    G1 Z+50 F1500
    # set up temp
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    # fan at 100%
    M106 S255
    # check current bed temp
    {% if BED_TEMP > 30 %}
      RESPOND MSG="Bed temp above room temperature, cool down bed"
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=30
    {% endif %}
    # calibrate bed pid
    RESPOND MSG="Start bed PID calibration"
    PID_CALIBRATE HEATER=heater_bed TARGET=70
    RESPOND MSG="Wait 1 minute"
    G4 P60000
    # check current extruder temp
    {% if EXTRUDER_TEMP > 30 %}
      RESPOND MSG="Extruder temp above room temperature, cool down extruder"
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM=30
    {% endif %}
    # calibrate extruder pid
    RESPOND MSG="Start extruder PID calibration"
    PID_CALIBRATE HEATER=extruder TARGET=230
    SAVE_CONFIG

[gcode_macro CALIBRATE_PROBE]
gcode:
    G28
    BED_MESH_CLEAR
    PROBE_CALIBRATE

[gcode_macro HOME_ALL_AXES]
gcode:
    G28

[gcode_macro CALIBRATE_BED_MESH]
gcode:
    G28
    BED_MESH_CALIBRATE
    SAVE_CONFIG

[gcode_macro SPRING_BED_CALIBRATION]
gcode:
    HOMING
    SCREWS_TILT_CALCULATE

[gcode_macro extrude_a_bit]
gcode:
    G91
    g1 e50 f50

[gcode_macro clog]
gcode:
    G91
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000
    g1 e-5 f200
    g1 e10 f5000

# dump all current Klipper variables to the g-code terminal.
[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro CANCEL_PRINTING]
gcode:
  CANCEL_PRINT

[gcode_shell_command printer_osram_off]
command: bash /home/pi/klipper_config/shutdown_script.sh
timeout: 90.0
verbose: True

[gcode_macro TURN_ON_OFF_AUTO_SHUTDOWN]
gcode:
  {% if printer.save_variables.variables.autoonoroff == 0 %}
    SAVE_VARIABLE VARIABLE=autoonoroff VALUE=1
    RESPOND TYPE=error MSG="AUTO SHUTDOWN: ON"
  {% else %}
    SAVE_VARIABLE VARIABLE=autoonoroff VALUE=0
    RESPOND TYPE=error MSG="AUTO SHUTDOWN: OFF"
  {% endif %}

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/3dprint/backup_script.sh
timeout: 90.0
verbose: True

# Filament Change

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0